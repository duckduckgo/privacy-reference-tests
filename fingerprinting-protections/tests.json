{
    "batteryAPI": {
        "name": "Battery API",
        "desc": "Battery API should be modified not to leak information about current state of battery / charging",
        "tests": [
            {
                "name": "charging property",
                "siteURL": "https://example.com/",
                "property": "navigator.getBattery().then(battery => battery.charging)",
                "expectPropertyValue": "true",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            },
            {
                "name": "chargingTime property",
                "siteURL": "https://example.com/",
                "property": "navigator.getBattery().then(battery => battery.chargingTime)",
                "expectPropertyValue": "0",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            },
            {
                "name": "dischargingTime property",
                "siteURL": "https://example.com/",
                "property": "navigator.getBattery().then(battery => battery.dischargingTime)",
                "expectPropertyValue": "Infinity",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            },
            {
                "name": "chargingTime property - local exception",
                "siteURL": "https://battery-exception.test/",
                "property": "navigator.getBattery().then(battery => battery.chargingTime)",
                "expectPropertyValue": "12345",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            },
            {
                "name": "chargingTime property - global exception",
                "siteURL": "https://global-exception.test",
                "property": "navigator.getBattery().then(battery => battery.chargingTime)",
                "expectPropertyValue": "12345",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            }
        ]
    },
    "hardwareAPIs": {
        "name": "Hardware APIs",
        "desc": "Various hardware APIs should be modified not to leak information about machine capabilities",
        "tests": [
            {
                "name": "keyboard property",
                "siteURL": "https://example.com/",
                "property": "navigator.keyboard",
                "expectPropertyValue": "undefined",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            },
            {
                "name": "keyboard property - prototype access",
                "siteURL": "https://example.com/",
                "property": "Navigator.prototype.keyboard",
                "expectPropertyValue": "undefined",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            },
            {
                "name": "hardwareConcurrency property",
                "siteURL": "https://example.com/",
                "property": "navigator.hardwareConcurrency",
                "expectPropertyValue": "2",
                "exceptPlatforms": []
            },
            {
                "name": "hardwareConcurrency property - prototype access",
                "siteURL": "https://example.com/",
                "property": "Navigator.prototype.hardwareConcurrency",
                "expectPropertyValue": "2",
                "exceptPlatforms": []
            },
            {
                "name": "deviceMemory property",
                "siteURL": "https://example.com/",
                "property": "navigator.deviceMemory",
                "expectPropertyValue": "8",
                "exceptPlatforms": []
            },
            {
                "name": "deviceMemory property - prototype access",
                "siteURL": "https://example.com/",
                "property": "Navigator.prototype.deviceMemory",
                "expectPropertyValue": "8",
                "exceptPlatforms": []
            },
            {
                "name": "deviceMemory property - local exception",
                "siteURL": "https://hardware-exception.test/path/file.html",
                "property": "Navigator.prototype.deviceMemory",
                "expectPropertyValue": "12345",
                "exceptPlatforms": []
            },
            {
                "name": "deviceMemory property - global exception",
                "siteURL": "https://global-exception.test/path/file.html",
                "property": "Navigator.prototype.deviceMemory",
                "expectPropertyValue": "12345",
                "exceptPlatforms": []
            }
        ]
    },
    "screenAPI": {
        "name": "Screen APIs",
        "desc": "Screen API should be modified not to leak information about browser window size and position",
        "tests": [
            {
                "name": "availTop property",
                "siteURL": "https://example.com/",
                "property": "screen.availTop",
                "expectPropertyValue": "0",
                "exceptPlatforms": []
            },
            {
                "name": "availTop property - prototype access",
                "siteURL": "https://example.com/",
                "property": "Screen.prototype.availTop",
                "expectPropertyValue": "0",
                "exceptPlatforms": []
            },
            {
                "name": "availLeft property",
                "siteURL": "https://example.com/",
                "property": "screen.availLeft",
                "expectPropertyValue": "0",
                "exceptPlatforms": []
            },
            {
                "name": "availLeft property - prototype access",
                "siteURL": "https://example.com/",
                "property": "Screen.prototype.availLeft",
                "expectPropertyValue": "0",
                "exceptPlatforms": []
            },
            {
                "name": "availWidth property",
                "siteURL": "https://example.com/",
                "property": "screen.availWidth === screen.width",
                "expectPropertyValue": "true",
                "exceptPlatforms": []
            },
            {
                "name": "availWidth property - prototype access",
                "siteURL": "https://example.com/",
                "property": "Screen.prototype.availWidth === screen.width",
                "expectPropertyValue": "true",
                "exceptPlatforms": []
            },
            {
                "name": "availHeight property",
                "siteURL": "https://example.com/",
                "property": "screen.availHeight === screen.height",
                "expectPropertyValue": "true",
                "exceptPlatforms": []
            },
            {
                "name": "availHeight property - prototype access",
                "siteURL": "https://example.com/",
                "property": "Screen.prototype.availHeight === screen.height",
                "expectPropertyValue": "true",
                "exceptPlatforms": []
            },
            {
                "name": "colorDepth property",
                "siteURL": "https://example.com/",
                "property": "screen.colorDepth",
                "expectPropertyValue": "24",
                "exceptPlatforms": []
            },
            {
                "name": "colorDepth property - prototype access",
                "siteURL": "https://example.com/",
                "property": "Screen.prototype.colorDepth",
                "expectPropertyValue": "24",
                "exceptPlatforms": []
            },
            {
                "name": "pixelDepth property",
                "siteURL": "https://example.com/",
                "property": "screen.pixelDepth",
                "expectPropertyValue": "24",
                "exceptPlatforms": []
            },
            {
                "name": "pixelDepth property - prototype access",
                "siteURL": "https://example.com/",
                "property": "Screen.prototype.pixelDepth",
                "expectPropertyValue": "24",
                "exceptPlatforms": []
            },
            {
                "name": "pixelDepth property - local exception",
                "siteURL": "https://sub.screensize-exception.test/path/file.html",
                "property": "Screen.prototype.pixelDepth",
                "expectPropertyValue": "12345",
                "exceptPlatforms": []
            },
            {
                "name": "pixelDepth property - global exception",
                "siteURL": "https://global-exception.test/path/file.html",
                "property": "Screen.prototype.pixelDepth",
                "expectPropertyValue": "12345",
                "exceptPlatforms": []
            }
        ]
    },
    "temporaryStorageAPI": {
        "name": "(Deprecated) Temporary Storage API",
        "desc": "Temporary Storage shold be modified not to leak information about free disk space",
        "tests": [
            {
                "name": "queryUsageAndQuota granted space value",
                "siteURL": "https://example.com/",
                "property": "new Promise(resolve => {navigator.webkitTemporaryStorage.queryUsageAndQuota((used, granted) => resolve(granted))})",
                "expectPropertyValue": "4294967296",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            },
            {
                "name": "queryUsageAndQuota granted space value - global exception",
                "siteURL": "https://tempstorage-exception.test/path/file.html",
                "property": "new Promise(resolve => {navigator.webkitTemporaryStorage.queryUsageAndQuota((used, granted) => resolve(granted))})",
                "expectPropertyValue": "9999999999",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            },
            {
                "name": "queryUsageAndQuota granted space value - global exception",
                "siteURL": "https://global-exception.test/path/file.html",
                "property": "new Promise(resolve => {navigator.webkitTemporaryStorage.queryUsageAndQuota((used, granted) => resolve(granted))})",
                "expectPropertyValue": "9999999999",
                "exceptPlatforms": [
                       "ios-browser",
                       "macos-browser"
                   ]
            }
        ]
    }
}